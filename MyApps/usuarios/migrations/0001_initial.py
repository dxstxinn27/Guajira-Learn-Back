# Generated by Django 5.1.2 on 2024-11-02 00:38

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cursos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del estudiante', max_length=15)),
                ('apellido', models.CharField(help_text='Apellido del estudiante', max_length=15)),
                ('tipo_id', models.CharField(choices=[('CÉDULA DE CIUDADANÍA', 'Cédula de Ciudadanía'), ('TARJETA DE IDENTIDAD', 'Tarjeta de Identidad')], help_text='Tipo de identificación', max_length=30)),
                ('numero_id', models.IntegerField(help_text='Número de identificación', unique=True)),
                ('carrera', models.CharField(choices=[('INGENIERÍA DE SISTEMAS', 'Ingeniería de Sistemas')], help_text='Carrera del estudiante', max_length=30)),
                ('semestre', models.IntegerField(help_text='Semestre actual', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('correo', models.EmailField(help_text='Correo del estudiante', max_length=254, unique=True)),
                ('contraseña', models.CharField(help_text='Contraseña del estudiante', max_length=15)),
            ],
            options={
                'verbose_name': 'estudiante',
                'verbose_name_plural': 'estudiantes',
            },
        ),
        migrations.CreateModel(
            name='HorarioDisponibilidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('Lunes', 'Lunes'), ('Martes', 'Martes'), ('Miércoles', 'Miércoles'), ('Jueves', 'Jueves'), ('Viernes', 'Viernes'), ('Sábado', 'Sábado'), ('Domingo', 'Domingo')], help_text='Día de la semana', max_length=10)),
                ('hora_inicio', models.TimeField(help_text='Hora de inicio')),
                ('hora_fin', models.TimeField(help_text='Hora de fin')),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del docente', max_length=15)),
                ('apellido', models.CharField(help_text='Apellido del docente', max_length=15)),
                ('numero_id', models.IntegerField(help_text='Número de identificación del docente', unique=True)),
                ('correo', models.EmailField(help_text='Correo del docente', max_length=254, unique=True)),
                ('contraseña', models.CharField(help_text='Contraseña del docente', max_length=15)),
                ('asignatura', models.ManyToManyField(help_text='Asignaturas que dicta', to='cursos.asignatura')),
            ],
            options={
                'verbose_name': 'docente',
                'verbose_name_plural': 'docentes',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('estudiante_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='usuarios.estudiante')),
                ('asignatura', models.ForeignKey(help_text='Asignatura que dictará', on_delete=django.db.models.deletion.CASCADE, to='cursos.asignatura')),
                ('horario_disponibilidad', models.ManyToManyField(help_text='Horarios de disponibilidad', to='usuarios.horariodisponibilidad')),
            ],
            options={
                'verbose_name': 'tutor',
                'verbose_name_plural': 'tutores',
            },
            bases=('usuarios.estudiante',),
        ),
    ]
